{
    schemas: [], // ['*'] or [] for all schemas
    tables: [], // ['*'] or [] for all tables
    expire_snapshot: {
        // Whether to execute expire_snapshot action or not
        enabled: true,

        // Timestamp before which snapshots will be removed (Default: 5 days ago)
        // FORMAT: '2021-06-30 00:00:00.000'
        older_than: "2022-01-01 00:00:00.000", 

        // Number of ancestor snapshots to preserve regardless of `older_than`
        // DEFAULT: 1
        retain_last: 1,

        // Size of the thread pool used for delete file actions (by default, no thread pool is used)
        max_concurrent_deletes: 0
    },
    remove_orphan_files: {
        // Whether to execute remove_orphan_files action or not
        enabled: true,

        // Remove orphan files created before this timestamp (Defaults to 3 days ago)
        // FORMAT: '2021-06-30 00:00:00.000'
        older_than: "2022-01-01 00:00:00.000",

        // Size of the thread pool used for delete file actions (by default, no thread pool is used)    
        max_concurrent_deletes: 0
    },
    rewrite_data_files: {
        // Whether to execute rewrite_data_files action or not
        enabled: true,

        // Name of the strategy - binpack or sort. Defaults to binpack strategy
        strategy: binpack,

        // Comma separated sort_order_column. 
        // Where sort_order_column is a space separated sort order info per column (ColumnName SortDirection NullOrder). 
        // SortDirection can be ASC or DESC. NullOrder can be NULLS FIRST or NULLS LAST
        // Example: id DESC NULLS LAST,name ASC NULLS FIRST
        sort_order: "",

        options: {
            // The minimum number of files that need to be in a file group for it to be considered for compaction. Defaults to 5
            "min-input-files": 1,

            // The output file size that this rewrite strategy will attempt to generate when rewriting files.
            // Defaults to 512MB (536870912 bytes)
            "target-file-size-bytes": 536870912,

            // The entire rewrite operation is broken down into pieces based on partitioning and within partitions based on size into groups. 
            // These sub-units of the rewrite are referred to as file groups. 
            // The largest amount of data that should be compacted in a single group is controlled by MAX_FILE_GROUP_SIZE_BYTES. 
            // This helps with breaking down the rewriting of very large partitions which may not be rewritable otherwise due to the resource constraints of the cluster. 
            // "max-file-group-size-bytes" // default is 1024L * 1024L * 1024L * 100L = 100 GB
            
            // Rewrites all files, regardless of their size. Defaults to false, rewriting only mis-sized files;
            // Only works with sort strategy
            "rewrite-all": false
        },  

    },
    rewrite_manifests: {
        // Whether to execute rewrite_manifests action or not
        enabled: true,

        // Set to false to avoid memory issues on executors
        use_caching: true
    }
}